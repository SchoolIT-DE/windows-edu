# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # SAML stuff
    saml.user_mapper:
      class: App\Security\User\UserMapper

    saml.user_updater:
      class: App\Security\User\UserUpdater
      arguments:
        - "@doctrine.orm.entity_manager"
        - "@saml.user_mapper"
        - "@logger"

    saml.user_creator:
      class: App\Security\User\UserCreator
      arguments:
        - "@doctrine.orm.entity_manager"
        - "@saml.user_mapper"
        - "@lightsaml_sp.username_mapper.simple"

    saml.attribute_mapper:
      class: App\Security\User\AttributeMapper

    # Kivuto
    kivuto.data_resolver:
      class: App\Kivuto\DataResolver
      arguments:
        - "@security.token_storage"

     # Menu
    app.menu:
      class: App\Menu\Builder
      arguments:
        - "@security.token_storage"
        - "@security.access.decision_manager"
        - "@knp_menu.factory"
      tags:
        - { name: knp_menu.menu_builder, method: mainMenu, alias: mainMenu }